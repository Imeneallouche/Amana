# Generated by Django 5.1.7 on 2025-03-14 11:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('badge_type', models.CharField(choices=[('VOLUNTEER', 'Volunteer'), ('NGO', 'Organization'), ('BENEFICIARY', 'Beneficiary')], max_length=20)),
                ('criteria', models.JSONField()),
                ('image_ipfs_hash', models.CharField(max_length=46)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=50)),
                ('subcategory', models.CharField(max_length=50)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('milestones', models.JSONField()),
                ('urgency_score', models.FloatField()),
                ('geofence', models.JSONField()),
                ('verification_template', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='PersonInNeedProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_id', models.UUIDField(unique=True)),
                ('location_hash', models.CharField(max_length=64)),
                ('privacy_settings', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='SmartContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_type', models.CharField(choices=[('ESCROW', 'Escrow Management'), ('BADGE', 'Badge Issuance'), ('VERIFICATION', 'Proof Verification')], max_length=20)),
                ('address', models.CharField(max_length=42, unique=True)),
                ('abi', models.JSONField()),
                ('bytecode', models.TextField()),
                ('compiler_version', models.CharField(max_length=20)),
                ('network', models.CharField(max_length=20)),
                ('deployed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImpactReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('MONTHLY', 'Monthly Summary'), ('MISSION', 'Per-Mission'), ('CUSTOM', 'Custom Range')], max_length=20)),
                ('visualization_data', models.JSONField()),
                ('pdf_ipfs_hash', models.CharField(max_length=46)),
                ('metrics', models.JSONField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mission')),
            ],
        ),
        migrations.CreateModel(
            name='AIAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('URGENCY', 'Urgency Scoring'), ('FRAUD', 'Fraud Detection'), ('IMPACT', 'Impact Prediction')], max_length=20)),
                ('input_data', models.JSONField()),
                ('output_data', models.JSONField()),
                ('model_version', models.CharField(max_length=20)),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mission')),
            ],
        ),
        migrations.CreateModel(
            name='MissionMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipfs_hash', models.CharField(max_length=46)),
                ('media_type', models.CharField(choices=[('IMAGE', 'Image'), ('VIDEO', 'Video'), ('DOCUMENT', 'Document')], max_length=20)),
                ('timestamp', models.DateTimeField()),
                ('geotag', models.JSONField(null=True)),
                ('beneficiary_proof', models.BooleanField(default=False)),
                ('ngo_verified', models.BooleanField(default=False)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='myapp.mission')),
            ],
        ),
        migrations.CreateModel(
            name='NGOCollaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms_hash', models.CharField(max_length=66)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mission')),
            ],
        ),
        migrations.CreateModel(
            name='NGOProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_status', models.CharField(choices=[('PENDING', 'Pending'), ('VERIFIED', 'Verified'), ('SUSPENDED', 'Suspended')], max_length=20)),
                ('transparency_score', models.FloatField(default=0.0)),
                ('operational_regions', models.JSONField(default=list)),
                ('collaboration_network', models.ManyToManyField(through='myapp.NGOCollaboration', to='myapp.ngoprofile')),
            ],
        ),
        migrations.AddField(
            model_name='ngocollaboration',
            name='ngo1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborations_initiated', to='myapp.ngoprofile'),
        ),
        migrations.AddField(
            model_name='ngocollaboration',
            name='ngo2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborations_received', to='myapp.ngoprofile'),
        ),
        migrations.AddField(
            model_name='mission',
            name='creator_ngo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.ngoprofile'),
        ),
        migrations.AddField(
            model_name='mission',
            name='creator_beneficiary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.personinneedprofile'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('testimonial', models.TextField()),
                ('media_hashes', models.JSONField(default=list)),
                ('tx_proof', models.CharField(max_length=66)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mission')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.personinneedprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BeneficiaryRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('needs', models.JSONField()),
                ('media_hashes', models.JSONField(default=list)),
                ('urgency_ai_score', models.FloatField()),
                ('location_geohash', models.CharField(max_length=12)),
                ('anonymity_level', models.CharField(choices=[('FULL', 'Fully Anonymous'), ('REGIONAL', 'Regional Visibility'), ('VERIFIED_ONLY', 'Visible to Verified NGOs')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mission', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.mission')),
                ('ngo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.ngoprofile')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.personinneedprofile')),
            ],
        ),
        migrations.AddField(
            model_name='mission',
            name='smart_contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='myapp.smartcontract'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('VOLUNTEER', 'Volunteer'), ('NGO', 'Non-Profit Organization'), ('BENEFICIARY', 'Person in Need')], max_length=20)),
                ('wallet_address', models.CharField(max_length=42, unique=True)),
                ('profile_picture', models.URLField()),
                ('tfa_enabled', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='custom_user_set', to='auth.permission')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('tx_hash', models.CharField(max_length=66, unique=True)),
                ('block_number', models.PositiveBigIntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ESCROW', 'In Escrow'), ('RELEASED', 'Funds Released'), ('DISPUTED', 'Disputed'), ('REFUNDED', 'Refunded')], max_length=20)),
                ('escrow_release_conditions', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='myapp.mission')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='myapp.user')),
            ],
        ),
        migrations.AddField(
            model_name='personinneedprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiary_profile', to='myapp.user'),
        ),
        migrations.AddField(
            model_name='ngoprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ngo_profile', to='myapp.user'),
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award_tx', models.CharField(max_length=66)),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_impact', models.JSONField(default=dict)),
                ('giving_history', models.JSONField(default=list)),
                ('social_connections', models.ManyToManyField(to='myapp.volunteerprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_profile', to='myapp.user')),
            ],
        ),
        migrations.AddIndex(
            model_name='mission',
            index=models.Index(fields=['urgency_score'], name='myapp_missi_urgency_23d074_idx'),
        ),
        migrations.AddIndex(
            model_name='mission',
            index=models.Index(fields=['deadline'], name='myapp_missi_deadlin_aba404_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type'], name='myapp_user_user_ty_b2648c_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['wallet_address'], name='myapp_user_wallet__f1abc6_idx'),
        ),
    ]
