# Generated by Django 5.1.7 on 2025-03-14 10:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('badge_type', models.CharField(choices=[('VOLUNTEER', 'Volunteer'), ('NGO', 'NGO')], max_length=20)),
                ('criteria', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='BlockchainEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('TX_CONFIRMED', 'Transaction Confirmed'), ('CONTRACT_EXECUTED', 'Smart Contract Executed'), ('DISPUTE_RAISED', 'Dispute Raised')], max_length=50)),
                ('tx_hash', models.CharField(max_length=66)),
                ('block_number', models.PositiveBigIntegerField()),
                ('log_data', models.JSONField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=50)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('amount_raised', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('location', models.CharField(max_length=100)),
                ('deadline', models.DateTimeField()),
                ('urgency', models.CharField(choices=[('CRITICAL', 'Urgent'), ('HIGH', 'High'), ('MODERATE', 'Moderate')], max_length=20)),
                ('smart_contract_address', models.CharField(blank=True, max_length=42)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='NGOProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=50)),
                ('verification_documents', models.FileField(upload_to='ngo_docs/')),
                ('transparency_score', models.FloatField(default=0.0)),
                ('website', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonInNeedProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_id', models.CharField(max_length=36, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('is_anonymous', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SmartContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_address', models.CharField(max_length=42, unique=True)),
                ('abi', models.JSONField()),
                ('bytecode', models.TextField()),
                ('deployed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImpactReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_file', models.FileField(upload_to='impact_reports/')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('metrics', models.JSONField()),
                ('visualization_data', models.TextField()),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mission')),
            ],
        ),
        migrations.CreateModel(
            name='MissionMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='mission_media/')),
                ('caption', models.CharField(max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ipfs_hash', models.CharField(blank=True, max_length=66)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='myapp.mission')),
            ],
        ),
        migrations.AddField(
            model_name='mission',
            name='creator_ngo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.ngoprofile'),
        ),
        migrations.AddField(
            model_name='mission',
            name='creator_beneficiary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.personinneedprofile'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mission')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.personinneedprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BeneficiaryRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('needs_list', models.JSONField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.mission')),
                ('ngo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.ngoprofile')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.personinneedprofile')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('VOLUNTEER', 'Volunteer'), ('NGO', 'Non-Profit Organization'), ('BENEFICIARY', 'Person in Need')], max_length=20)),
                ('wallet_address', models.CharField(blank=True, max_length=42, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tx_hash', models.CharField(max_length=66)),
                ('block_number', models.PositiveBigIntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('COMPLETED', 'Completed'), ('DISPUTED', 'Disputed')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mission')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.AddField(
            model_name='personinneedprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.user'),
        ),
        migrations.AddField(
            model_name='ngoprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.user'),
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('tx_proof', models.CharField(max_length=66)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_donated', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('impact_score', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
    ]
